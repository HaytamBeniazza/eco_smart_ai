version: '3.8'

services:
  # EcoSmart AI Backend Service
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: ecosmart-backend
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
      - ENV=production
    volumes:
      - ./backend/data:/app/data
      - ./backend/logs:/app/logs
    networks:
      - ecosmart-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # EcoSmart AI Frontend Service  
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: ecosmart-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - BACKEND_URL=http://backend:8000
    depends_on:
      - backend
    networks:
      - ecosmart-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: ecosmart-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - ecosmart-network
    restart: unless-stopped
    profiles:
      - production

# Networks
networks:
  ecosmart-network:
    driver: bridge
    name: ecosmart-network

# Volumes for persistent data
volumes:
  backend-data:
    driver: local
  backend-logs:
    driver: local 